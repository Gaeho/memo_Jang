면접 질의 사항 정리 

1. 1분 자기 소개

[가이드 - 자신감있는 태도, 직무 역량 강조, 장점 구체적으로, 반복 연습을 통해 내용 숙지
자연스럽게 말할 수 있도록 연습해야함 PREP기법 적용]

안녕하십니까 지원자 장동주입니다. 일단 면접 기회를 주셔서 감사하다는 말씀 하고 싶습니다. 
사실 저는 이쪽 분야에 대해 올 여름이 될 무렵에서야 시작했습니다. 이전에는 다른 분야에서
전혀 관련 없는 일들을 했습니다만, 항상 일을 하면서 정말 미래를 위해서, 그리고 나 자신을 
위해서 지금 이 길이 맞는지에 대한 의문이 들었습니다. 
그러던 어느날 우연찮게 프로그래밍이라는 분야에 대해서 알게 되었고, 
지금은 직업으로써 프로그래머 라는 타이틀을 갖길 바라며 노력하는 제 자신을 발견했습니다. 

저도 제 자신이 아직 한 사람의 프로그래머가 되기에는 부족한 점이 많다고 생각합니다. 
하지만 언제나 전문적인 직업인으로서 프로그래머를 열망하는 제 염원이 머지 않아서 
제 부족한 점들을 메꿔주리라 믿어 의심치 않습니다. 

지금도 매일 한 걸음씩 배우고 또 익히고 있습니다. 
이런 장래성에 대해서 한번 눈여겨봐주시고 
저를 선택해주신다면
분명 후회없는 선택이 되시리라 약속드리겠습니다.


2. 이 쪽 분야로 전직을 하게 된 계기가 무엇인지?
일단 해당 이전에는 HRD관련 업체에서 근무했었습니다. 거기에서 처음 프로그래밍이라는 길에 대해서
알게 되었습니다. 4차 산업혁명의 진행과 코로나라는 특수한 시기는 프로그래밍을 포함한
IT업계에 큰 기회가 왔다고 생각했습니다. 또한 프로그래밍을 한 단계씩 배워가면서 프로그래밍 작업이
제 적성에도 잘 맞는다고 생각했습니다.

프로그래밍을 배우면서 이 분야는 블록쌓기와 비슷하다고 생각을 했습니다.
특정한 용도의 작품을 만들기 위해서 블럭을 쌓는 규칙을 배워야하고
결국에는 본인이 방법들을 조합해내서 본인만의 작품을 만들어내야하고,
다른 사람과 협업을 통해서 더 멋진 플러스 알파를 만들 수 있다고 생각했기 때문입니다.

이처럼 기회와 적성이 모두 이 분야를 가리키고 있는데 마다할 이유가 없다고 생각했습니다.


3. 공백기에는 무엇을 했는지?
이 직업을 공부하기로 한 이후에는 6개월 과정의 학원을 수강했고 그 외의 공백은 없습니다.


4. 프로젝트를 어떻게 진행했는지 이야기해보세요. 어려운점은 없었는지? 어떻게 극복했는지?

5. 나이에 대한 부분. 나이가 적지 않은데 회사생활을 잘할 수 있을지?


- aws를 다루는지? (Aws ec2 s3로 클라우드 경험한 것은 불필요)

기술면접 내용

자바일반

객체지향 프로그래밍이 무엇입니까?
	 -객체지향 프로그래밍은 컴퓨터 프로그래밍 패러다임 중 하나로, 프로그래밍에서 필요한
	데이터를 추상화시켜서 상태와 행위를 가진 객체를 만들고 그 객체들 간의 유기적인
	상호작용을 통해 로직을 구성하는 방법이다.

	코재용이 유보용이 대프적합
	장점1. 코드 재사용이 용이 - 남이 만든 클래스를 이용할 수 있고 상속을 통해 확장해서
	사용할 수 있다.
	장점2. 유지 보수가 용이 - 절차 지향 프로그래밍에서는 코드를 수정할 때 일일이 찾아서
	수정해야하는 반면 객체 지향 프로그래밍에서는 수정할 부분이 클래스 내부에 맴버 변수
	혹은 메서드로 존재하기에 해당 부분만 수정하면 된다.
	장점3. 대형 프로젝트에 적합 - 클래스 단위로 모듈화시켜서 개발할 수 있으므로
	대형프로젝트처럼 여러명, 여러 회사에서 프로젝트를 개발할 때 업무 분담하기 쉽다.

	단점 1. 처리속도가 상대적으로 느리다. 2.객체가 많으면 용량이 커질 수 있음
	3. 설계 시 많은 시간과 노력이 필요하다.

	@꼬리질문1 - 클래스와 인스턴스(객체)는 무엇인지 설명해보세요
	클래스는 집단에 속하는 속성과 행위를 변수와 메서드로 정의한 것이다. 객체를 만들기 위한
	메타정보라고 볼 수 있다. 인스턴스(객체)는 클래스에서 정의한 것을 토대로 실제 메모리에
	할당된 것으로 실제 프로그램에서 사용되는 데이터라고 할 수 있다. (붕어빵 틀과 붕어빵)

	@꼬리질문2 - 객체지향 프로그래밍에서 추상화의 개념에 대해서 설명해보세요	
	추상화란 어떤 실체로부터 공통적인 부분이나 관심 있는 특성들만 한 곳에 모은것을 
	의미한다. 객체지향에서의 추상화는 어떤 하위 클래스들에 존재하는 공통적인 메소드를
	인터페이스로 정의하는 것을 의미한다. 공통된 속성/기능을 묶어 이름을 붙인다.

	@꼬리질문3 - 객체지향 프로그래밍에서 캡슐화란 무엇인가요?
	절차지향 프로그래밍에서도 라이브러리를 통해서 변수와 함수를 재활용할 수는 있었지만
	코드의 수정이 일어났을 때 영향의 범위를 예상하기 어려운 문제가 있었다.
	그러나 객체지향 프로그래밍에서는 캡슐화를 통해 객체가 외부에 노출하지 않아야 할 
	정보 또는 기능을 접근제어자를 통해 적절히 제어 권한이 있는 객체에서만 접근하도록 할
	수 있기에 코드의 수정이 있어났을 때 책임이 있는 객체만 수정하면 된다. 따라서  
	특정 개체의 영향 범위를 예측하는데 수월해졌다. 뿐만아니라 관련된 기능과 특성을 
	한 곳에 모으로 분류하기 때문에 객체 재활용이 원활해졌다. 
	객체지향 프로그래밍에서 기능과 특성의 모음을 클래스라는 캡슐에 분류해서 넣는 것이 캡슐화다. 
	객체가 맡은 역할을 수행하기 위한 목적을 한데 묶는다.(어떤 코드의 영향 범위를 
	특정할 수 있고, 특정한 목적에 따라서 코드를 모으기 때문에 비슷한 목적에 재사용이 
	용이하고 접근제어자 이용해서 해당 객체의 영향 범위를 조정할 수 있다.)

	@꼬리질문4 - 객체지향 프로그래밍에서 상속이 무엇입니까?
	절차지향 프로그래밍에서도 다른 소스코드 갖다 쓸 수 있었지만 내가 임의로 수정하게
	된다면 다른 라이브러리가 되어 버전에 따라 동작하지 않을 수 있고 불필요한 코드의
	수정작업을 해야할 수 있다. 상속은 부모 클래스의 속성과 기능을 그대로 이어받아
	사용할 수 있게 하고 기능의 일부분을 변경해야할 경우 상속받은 자식클래스에서
	해당 기능만 다시 정의하여 사용할 수 있게 하는 것이다. 다만 자바에서는 클래스의 
	상속 관계에서 혼란을 줄 수 있기 때문에 상속은 반드시 하나만 가능하고 필요하다면 
	인터페이스를 사용할 수 있도록 한다.

	@꼬리질문5 - 그러면 다형성은 무엇인지?
	하나의 변수명, 함수명 등이 상황에 따라 다른 의미로 해석될 수 있는 것이다.
	즉 오버라이딩 오버로딩이 가능하다는 얘기다.
	오버라이딩 - 부모클래스의 메서드와 같은 이름, 매개변수를 재정의 하는 것
	오버로딩 - 같은 이름의 함수를 여러 개 정의하고, 매개변수의 타입과 개수를 
	다르게 하여 매개변수에 따라 다르게 호출할 수 있게 하는 것

Getter와 Setter를 사용하는 이유가 무엇인가요?
	맴버변수에 직접 접근하지 못하도록 private 접근지정자를 설정하고 public으로
	게터, 세터 메서드를 만드는 것을 많이 해왔다. 이렇다면 아무나 접근이 가능한데
	어째서 private로 선언을 하는 것일까? 결론적으로는 게터와 세터를 사용하면
	메서드를 통해서 접근하기 때문에 메서드 안에서 매개변수와 같이 어떤 올바르지
	않은 입력에 대해 사전에 처리할 수 있게 제한하거나 조절할 수 있기 때문이다.
	예를 들어 세터에서 유효범위를 넘은 정수가 들어왔을 때 알맞는 처리를 하고 나서
	set하거나 예외처리를 할 수 있다. 게터도 마찬가지로 자료에 무언가 더하거나 빼고
	주는 것도 얼마든지 가능하다.
---------------------------------------------------------------------------------
JVM이 무엇인가요 ? 
	
Java virtual marchine의 준말로 

자바의 바이트코드를 해석하고 실행하는 역할을 한다.
1. 자바 애플리케이션을 클래스 로더를 통해 읽어들여 자바 API와 함께 실행하는 것
2. JVM은 Java와 os사이에서 중개자 역할을 수행하여 자바가 운영체제에 구애받지 않고
재사용 가능하게 해준다.
3. 메모리관리 (가비지 콜랙션)을 수행한다.
4. 스택 기반의 가상머신이다. (ARM 아키텍처 같은 하드웨어는 레지스터 기반 동작하지만
JVM은 스택기반으로 동작함

자바프로그램 실행과정

1. 프로그램 실행 시 JVM은 OS로부터 이 프로그램이 필요로 하는 메모리를 할당 받는다.
JVM은 이 메모리를 용도에 따라 여러 영역으로 나누어 관리함.
2. 자바 컴파일러(Javac)가 자바 소스코드(.java)를 읽어들여 자바 바이트코드(.class)로 
변환시킨다.
3. Class Loader를 통해 클래스 파일들을 JVM으로 로딩함
4. 로딩된 Class 파일들은 Execution engine을 통해 해석됨
5. 해석된 바이트 코드는 Runtime Data Areas에 배치되어 실질적인 수행이 이루어짐
6. 이러한 실행 과정 속에서 JVM은 필요에 따라 쓰레드 동기화 나 가비지콜랙터 같은
관리 작업을 수행함

	가상머신이 뭔가요? - 프로그램을 실행하기 위해 물리 머신과 유사한 머신을
			   소프트웨어로 구현한 것이다. 가상머신은  물리적 컴퓨터처럼 
		               애플리케이션과 운영 체제를 실행한다. 그러나 가상 머신은 
			  물리적 컴퓨터에서 실행되고 물리적 컴퓨터처럼 작동하는 
			  컴퓨터 파일이다. 별도의 컴퓨터 시스템처럼 작동한다.
	그럼 가상머신을 왜 쓰나? - 가상 머신은 다른 시스템에서 샌드박스화 되므로 
				가상 머신 내의 소프트웨어가 호스트 컴퓨터를 변조할 수 없다.
				호스트 환경에서 수행하기 위험한 특정 작업을 수행하기 위해
				생성되는 경우가 많다.	
				
	컴파일이 뭔가요 -> 사람이 이해하는 언어를 컴퓨터가 이해할 수 있는 언어로 바꿔주는 과정

선형(Linear) 자료구조란 무엇입니까?
	선형자료구조란 하나의 자료 뒤에 하나의 자료가 존재하는 것이다. 
	자료들 간의 앞뒤 관계가 1:1의 선형관계이다. 
	배열과 리스트가 대표적이고 더 나아가서 스택, 큐 도 이에 해당한다.
	반대로 비선형(NonLinear) 자료구조란 하나의 자료 뒤에 여러개의 자료가
	존재할 수 있는 것이다. 자료들 간의 앞뒤 관계가 1:n, 또는 n:n의 관계이다.
	트리와 그래프가 대표적이며 계층적 구조를 나타내기에 적절하다.

접근제한자 protect private public default에 대해서 구분해 보세요

public - 클래스, 필드, 생성자, 메소드에 적용가능 - 모든 클래스에서 접근 가능

protected - 필드, 생성자, 메소드에 적용가능 - 자식 클래스가 아닌 다른 패키지에 소속된 클래스 접근 불가

default - 클래스, 필드, 생성자, 메소드에 적용가능 - 다른 패키지의 클래스는 접근 불가

private - 필드, 생성자, 메소드에 적용가능 - 모든 외부클래스 접근 불가(해당 클래스 내에서만 사용가능)


extends와 implements의 차이점은 무엇인가요?
상위 객체(부모)의 특징(메소드, 변수 등)을 '새롭게 구현'하는가, '그대로 사용'하는가에 따라
상속의 형태가 달라진다. 
extends는 부모에서 선언/정의를 모두하며, 자식은 오버라이딩할 필요 없이 부모의 메소드와
변수를 그대로 사용할 수 있다. 부모의 특징을 연장하여 사용한다. +자바는 다중 상속을 
지원하지 않는다.
일반클래스/추상 클래스 상속에 사용
부모의 클래스의 기능을 사용

implements(인터페이스 구현)는 부모 객체에서는 선언만 하며, 정의는 반드시 자식이
오버라이딩해서 사용한다. 부모의 특징을 바탕으로 새로운 특징을 정의하여 사용한다.
자바의 인터페이스 상속은 해당 메소드를 꼭 사용하라는 계약 및 분류의 의미가 강하다.
+ 클래스의 다중상속 대신 인터페이스의 다중상속 개념을 사용할 수 있다.
주로 설계 목적으로 구현
구현 클래스는 추상클래스에 기술된 내용을 반드시 모두 사용해야 함
다중 상속 가능

그러면 abstract 클래스 와 interface의 차이점에 대해서도 설명해보세요
추상 클래스의 목적은 상속을 받아서 기능을 확장시키는 것이 목적이고
인터페이스의 목적은 구현하는 모든 클래스에 대해 특정한 메서드가 반드시 존재하도록
강제하는 역할이다. 구현 객체가 같은 동작을 한다는 것을 보장하기 위한 것이다.


String의 데이터 타입은? (원시 타입인지 참조 타입인지?)
그럼 원시타입은 뭐고 참조 타입은 무엇인지?
원시 타입 - 숫자(Number) 불린(Boolean) 널(Null) undefined 문자열(String)
참조 타입 - 객체(Object) 배열(Array) 함수(function)

원시 타입 데이터는 변수에 할당될 때 메모리 상에 고정된 크기로 저장되고 해당 변수가 
원시 데이터의 값을 보관한다. 원시 타입 자료형은 모두 변수 선언, 초기화, 할당시 값이
저장된 메모리 영역에 직접적으로 접근한다. 즉, 변수에 새 값이 할당될 때 변수에 
할당된 메모리 블럭에 저장된 값을 바로 변경한다는 뜻이다.
실제 데이터 값을 저장하는 타입이다.
null 값을 담을 수 없다. int i = null;(불가능) Integer i = null; (가능)
제네릭 타입에서 사용할 수 없다. List<int>i; (불가능) List<Integer>i; (가능)
대신 접근 속도가 빠르고 차지하는 메모리의 양이 적다.

참조 타입 데이터는 크기가 정해져 있지 않고 변수에 할당될 때 값이 직접 해당 변수에
저장될 수 없으며, 변수에는 데이터에 대한 참조만 저장된다. 변수의 값이 저장된
힙(Heap) 메모리의 주소값을 저장한다. 참조 타입은 변수의 값이 저장된 메모리 블럭의
주소를 가지고 있고, 자바스크립트 엔진이 변수가 가지고 있는 메모리 주소를 이용해서
변수의 값에 접근한다.
메모리 번지 값을 통해 객체를 참조하는 타입이다.


delete와 truncate의 차이점은 무엇이죠?

equals와 ==의 차이점에 대해서 설명해보세요

배열과 리스트의 차이점에 대해서 설명해보세요

Session과 쿠키의 차이점은? 

절차적 언어와 비절차적 언어에 대해서 설명해보세요

동기식과 비동기식의 차이점에 대해서 설명해보세요

멀티 스레드가 무엇인가요? runnable을 아는지?

멀티쓰레드와 멀티프로세스의 장단점에 대해서 설명해보세요

프로세스와 스레드의 차이점을 말해보세요

성능 개선에 사용한 thread 기능에 대해서 자세히 설명해보세요.

Open Api 기술에 대해서 설명해보세요

jsp를 어떻게 썼는지?

스프링에 대해서 어떻게 생각하는지?
(질문에 따라서 새끼질문이 무궁무진함)
- 답변자가 어노테이션 얘기를 한 경우 ->@controller가 무엇인지?

-jsp에서 페이징 처리를 하는데 쿼리를 어떻게 짜는지? 어떻게 구현하는지?


heap과 stack의 차이점에 대해서 이야기해보세요

네트워크 서버 계층 구조가 어떻게 되나요?(7계층에 대한 사항)

static에 대해서 설명할 수 있나?

ajax가 무엇인지? Jquery가 무엇인지?


DB 테이블 구조 중 가장 기본적인 3가지에 대해 이야기해보세요

ddl, dml, dcl, tcl 등에 대해서 아는데로 설명해보세요

조인 연관 질문
Join이 무엇인지?

Inner join과 Outer join의 차이점은? Inner join은 몇 개까지 묶을 수 있는지?

Insert, select, update, delete 쿼리문 사용 방법을 모두 작성하시오(where절 이하는 작성x)

alter 명령어는 언제 쓰이나요?

group by 절에 대해서 설명해보세요

having에 대해서 where와 비교하여 설명해보세요


스프링
http가 무엇인지 설명해보세요

post와 get 방식의 차이점에 대해서 설명해보세요

스프링 프레임워크를 쓰는 이유가 무엇입니까?

메이븐이란 무엇인가요?

컨트롤러 단에 대해서 아는대로 설명해보세요

DI와 AOP의 개념에 대해서 설명해보세요

AOP는 구체적으로 어떻게 쓸 것인지 설명해보세요 

Spring에서 dependancy는 무엇이고 어떻게 설정할 수 있는지?
------------------------------------------------------------
Spring의 기본 동작 흐름에 대해서 설명해보세요 
1.클라이언트의 요청을 디스패쳐 서블릿이라는 서블렛 클래스가 받는다
2.디스패처 서블릿은 요청 URL을 핸들러 맵핑에게 전달하고 현재 요청에
알맞는 컨트롤러와 매서드에 대한 정보를 알아낸다
3. 디스패처 서블릿은 핸들러 어댑터에게 요청 처리를 위임한다
4. 핸들러 어댑터는 컨트롤러와 해당 매서드를 실행한다.
5. 컨트롤러는 비즈니스 로직을 처리하고, 그 결과를 바탕으로 뷰에 전달할 
객체를 모델 객체에 저장한다.
6.디스패처 서블릿은 view name을 뷰 리졸버에게 전달하여 뷰 객체를 얻는다.
7. 디스패처 서블릿은 뷰 객체에 화면 표시를 의뢰한다. 
8. 뷰 객체는 해당하는 뷰(JSP,타임리프 등)를 호출하며, 모델 객체에서 화면 표시에 필요한
객체를 가져와 화면 표시를 처리한다.
------------------------------------------------------------
스프링 관련 추가질문 

컨테이너가 무언인지?
컨테이너는 인스턴스의 생명주기를 관리하며 생성된 인스턴스에 추가적인 기능을 제공한다
예를 들어 서블릿을 실행해주는 WAS는 서블릿 컨테이너를 가지고 있다고 한다.
WAS는 웹 브라우저로 부터 서블릿 URL에 해당하는 요청을 받으면 서블릿을 메모리에 올린 후 실행
한다. 개발자가 클래스를 작성했지만 실제로 메모리에 올리고 실행하는 WAS가 가지고 있는
서블릿 컨테이너이다. 

https://blog.naver.com/hyunjiok10/222569620345->추가 정리할 것



---------------------------------------------------------------
MVC가 무엇인지 설명해보세요(순서도, 그림등으로 간단하게 설명)

ibatis와 mybatis의 차이가 뭔지?

Mybatis에서 변수를 초기화하는 방식을 작성해보세요(XML파일 상에서 작성)

스프링 부트 JPA, Hibernate 등에 대해서 설명해보세요

JSON이란 무엇인가요?

이클립스에서 썼던 플러그인에는 어떤 것들이 있었나요?

 
알고리즘 등 코딩테스트 

피보나치 수열을 알고 있습니까? 피보나치수열에서 10번째 값을 찾는 함수를 작성해보세요

이중 for문을 이용하여 별찍기 문제??? < 검색해서 문제 다시 만들기

 1부터 1000까지의 자연수 중에서 3 또는 5로 나누어지는 수를 모두 더했을 때 값을
구할 수 있는 코드를 원하는 프로그래밍 언어를 이용하여 작성해보세요.


