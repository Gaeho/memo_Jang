인덱스

- 책갈피와 같은 역할
- 인덱스가 부여된 필드를 먼저 찾아준다.
- 자주 사용되는 컬럼에 부여한다
- 데이터 저장공간이 필요하다
- PK, Unique constraint 정의 시에 자동으로 인덱스 설정

인덱스 종류
1) 유니크 인덱스
- 자동으로 pk가 생성

create unique index 인덱스명(테이블명_필드명_idx)
on 적용 테이블명 (필드명1)

2) 논-유니크 인덱스
- 중복이 되어도 괜찮은 필드에 부여한다.

create index 인덱스명(테이블명_필드명_idx)
on 적용 테이블명(필드명1)
on 적용 테이블명(필드명1,필드명2) <복합키

예시 b_emp2 테이블 ename에 인덱스 생성하라
create index emp_ename_idx
on emp(ename);
->인덱스가 생성되었습니다.


주의] 데이터가 자주 변경되는 데이터의 경우에는
인덱스를 부여하면 안된다. 수정이 자주되는 필드에
인덱스를 부여하면 내부적으로 정렬을 하여 찾는 속도가 느려짐

[인덱스 조회 방법]
1. user_index : 인덱스 이름, 고유의 정보
2. user_ind_columns: 인덱스가 어떤 필드에 적용되었는지, 
인덱스 이름, 테이블, 필드명
1,2를 조합한다.

--------------------------------------------------------

시퀀스
-특정 필드에 연결시켜서 데이터를 입력할 때, 자동적으로 지정한
번호를 넣어주는 역할을 하는 오라클 객체
rownum과 유사하다.(번호 지정 가능 여부가 다르다.)

pk와 연결된 필드(중복되지 않는 유일한 값)

[형식]
create sequence sequence_name(테이블명_필드명) 
[start with n] n->시작번호
[increment by n] n->증가치
[{maxvalue n | nomaxvalue}] 최대값 n | 최대값 제한 없음
[{minvalue n | nominvalue}] 최대값 n | 최소값 설정 안함
[{cycle|nocycle}] 순환 유무. 사이클 최대값 도달 이후 다시 시작번호
		부터 시작한다.
[{cache|nocache}] 메모리에 저장할래 말래

 [시퀀스 속성]
1. currval : 현재값을 반환
2. nextval : 현재 지정된 시퀀스 값의 다음 값을 반환(증가값)

[주의]
시퀀스를 생성하고 바로 현재값(currval)을 확인할 수 없다.
현재 시퀀스에 설정된 값이 저장되어 있지 않기 때문에 오류 발생
시쿼스 생성 시 반드시 nextval을 설정한다.


수정 - alter sequence name_seq;
삭제 - drop sequence name_seq;

